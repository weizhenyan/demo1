<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zy.blog.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.zy.blog.model.Blog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zy.blog.model.Blog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 20 02:25:20 GMT+08:00 2021.
    -->
    insert into t_blog (id, user_id, title, 
      description, created, status, 
      content)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zy.blog.model.Blog">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 20 02:25:20 GMT+08:00 2021.
    -->
    update t_blog
    <trim prefix="set" suffixOverrides=",">
      <if test="userId!=null">user_id = #{userId,jdbcType=BIGINT},</if>
      <if test="title!=null">title = #{title,jdbcType=VARCHAR},</if>
      <if test="description!=null">description = #{description,jdbcType=VARCHAR},</if>
      <if test="created!=null">created = #{created,jdbcType=TIMESTAMP},</if>
      <if test="status!=null">status = #{status,jdbcType=TINYINT},</if>
      <if test="content!=null"> content = #{content,jdbcType=LONGVARCHAR}</if>
    </trim>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, user_id, title, description, created, status, content
    from t_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jun 20 02:25:20 GMT+08:00 2021.
    -->
    select id, user_id, title, description, created, status, content
    from t_blog
  </select>
  <select id="selectPage" resultType="com.zy.blog.model.Blog">
    SELECT id, user_id, title, description, created, status, content
     FROM user t_blog id=#{state}
</select>
  <!--mybatis-plus多表联合查询,带上${ew.customSqlSegment就可以实现查询-->
  <select id="findByPage" resultType="com.zy.blog.model.vo.BlogVo">
        select b.*,u.username from t_blog as b left join t_user as u
        on b.user_id = u.id ${ew.customSqlSegment}
    </select>
  <!--根据id是否在里面去查数据 -->
  <select id="findByIds" resultMap="BaseResultMap" parameterType="java.util.List">
    select  id, user_id, title, description, created, status, content
    from t_blog
    where id in
    <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
      #{id}
    </foreach>

  </select>
</mapper>